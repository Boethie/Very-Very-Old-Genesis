package genesis.world.gen.layer;

import net.minecraft.world.WorldType;
import net.minecraft.world.biome.BiomeGenBase;
import net.minecraft.world.gen.layer.GenLayer;
import net.minecraft.world.gen.layer.IntCache;

import static genesis.world.biome.GenesisBiomes.*;

public class GenLayerBiomeGenesis extends GenLayer
{
    private BiomeGenBase[] hot;
    private BiomeGenBase[] warm;
    private BiomeGenBase[] cool;
    private BiomeGenBase[] frozen;

    public GenLayerBiomeGenesis(long par1, GenLayer par3GenLayer)
    {
        super(par1);
        this.hot = new BiomeGenBase[] {rainforest, rainforestSwamp};
        this.warm = new BiomeGenBase[] {};
        this.cool = new BiomeGenBase[] {};
        this.frozen = new BiomeGenBase[] {};
        
        //These are only needed until biomes are added to the warm, cool and frozen categories
        if(warm.length == 0) warm = hot;
        if(cool.length == 0) cool = hot;
        if(frozen.length == 0) frozen = hot;
        
        this.parent = par3GenLayer;
    }

    /**
     * Returns a list of integer values generated by this layer. These may be interpreted as temperatures, rainfall
     * amounts, or biomeList[] indices based on the particular GenLayer subclass.
     */
    public int[] getInts(int par1, int par2, int par3, int par4)
    {
        int[] aint = this.parent.getInts(par1, par2, par3, par4);
        int[] aint1 = IntCache.getIntCache(par3 * par4);

        for (int i1 = 0; i1 < par4; ++i1)
        {
            for (int j1 = 0; j1 < par3; ++j1)
            {
                this.initChunkSeed((long)(j1 + par1), (long)(i1 + par2));
                int k1 = aint[j1 + i1 * par3];
                int l1 = (k1 & 3840) >> 8;
                k1 &= -3841;

                if (isBiomeOceanic(k1))
                {
                    aint1[j1 + i1 * par3] = k1;
                }
                else if (k1 == BiomeGenBase.mushroomIsland.biomeID)
                {
                    aint1[j1 + i1 * par3] = k1;
                }
                else if (k1 == 1)
                {
                    if (l1 > 0)
                    {
                        if (this.nextInt(3) == 0)
                        {
                            aint1[j1 + i1 * par3] = BiomeGenBase.mesaPlateau.biomeID;
                        }
                        else
                        {
                            aint1[j1 + i1 * par3] = BiomeGenBase.mesaPlateau_F.biomeID;
                        }
                    }
                    else
                    {
                        aint1[j1 + i1 * par3] = this.hot[this.nextInt(this.hot.length)].biomeID;
                    }
                }
                else if (k1 == 2)
                {
                    if (l1 > 0)
                    {
                        aint1[j1 + i1 * par3] = BiomeGenBase.jungle.biomeID;
                    }
                    else
                    {
                        aint1[j1 + i1 * par3] = this.warm[this.nextInt(this.warm.length)].biomeID;
                    }
                }
                else if (k1 == 3)
                {
                    if (l1 > 0)
                    {
                        aint1[j1 + i1 * par3] = BiomeGenBase.megaTaiga.biomeID;
                    }
                    else
                    {
                        aint1[j1 + i1 * par3] = this.cool[this.nextInt(this.cool.length)].biomeID;
                    }
                }
                else if (k1 == 4)
                {
                    aint1[j1 + i1 * par3] = this.frozen[this.nextInt(this.frozen.length)].biomeID;
                }
                else
                {
                    aint1[j1 + i1 * par3] = BiomeGenBase.mushroomIsland.biomeID;
                }
            }
        }

        return aint1;
    }
}